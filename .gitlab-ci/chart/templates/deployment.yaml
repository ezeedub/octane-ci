apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: {{ template "chart.fullname" . }}
  labels:
    app: {{ template "chart.name" . }}
    release: {{ .Release.Name }}
    chart: {{ .Chart.Name }}-{{ .Chart.Version | replace "+" "_" }}
    heritage: {{ .Release.Service }}
    webcontainer: "true"
spec:
  replicas: {{ .Values.replicaCount }}
  template:
    metadata:
      labels:
        app: {{ template "chart.name" . }}
        release: {{ .Release.Name }}
        webcontainer: "true"
    spec:
      containers:
        - name: {{ template "chart.fullname" . }}-build
          image: "{{ .Values.image.build }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          volumeMounts:
            - name: {{ default "cms" .Values.ingress.url.project }}-files
              mountPath: {{ .Values.volumeMounts.cmsfiles.mountPath }}
            - name: webroot
              mountPath: /var/www
          envFrom:
            - configMapRef:
                # fullname-env-config configMap defined by kubectl in deploy job
                name: {{ template "chart.fullname" . }}-env-config
            - configMapRef:
                # Override with Kubernetes specific values.  Must come second.
                name: {{ template "chart.fullname" . }}-common-config
          env:
            - name: MYSQL_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ template "chart.mariadb.fullname" . }}
                  key: mariadb-password
        - name: {{ template "chart.fullname" . }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          volumeMounts:
            - name: {{ default "cms" .Values.ingress.url.project }}-files
              mountPath: {{ .Values.volumeMounts.cmsfiles.mountPath }}
            - name: webroot
              mountPath: /var/www
          envFrom:
            - configMapRef:
                # fullname-env-config configMap defined by kubectl in deploy job
                name: {{ template "chart.fullname" . }}-env-config
            - configMapRef:
                # Override with Kubernetes specific values.  Must come second.
                name: {{ template "chart.fullname" . }}-common-config
          env:
            - name: MYSQL_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ template "chart.mariadb.fullname" . }}
                  key: mariadb-password
          ports:
            - name: {{ .Values.service.name }}
              containerPort: {{ .Values.service.internalPort }}
          # TODO these probes were /user/login, determine what they should be
          # TODO the timeoutSeconds were bumped higher than swarm test project
          #      to support the web container not being cycled during cache
          #      rebuilds or other things where Drupal takes a bit to become
          #      responsive again
          livenessProbe:
            timeoutSeconds: 10
            httpGet:
              path: /robots.txt
              port: {{ .Values.service.internalPort }}
          readinessProbe:
            timeoutSeconds: 10
            httpGet:
              path: /robots.txt
              port: {{ .Values.service.internalPort }}
          resources:
{{ toYaml .Values.resources | indent 12 }}
      imagePullSecrets:
        - name: gitlab-registry-secret
      initContainers:
        - name: webdata
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          command: [bash, -c]
          args: ["cp -r /var/www/* /data"]
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          volumeMounts:
            - name: webroot
              mountPath: /data
      volumes:
        - name: {{ default "cms" .Values.ingress.url.project }}-files
        {{- if .Values.persistence.enabled }}
          persistentVolumeClaim:
            claimName: {{ .Values.persistence.cmsfiles.existingClaim | default (printf "%s-files" (include "chart.fullname" .)) }}
        {{- else }}
          emptyDir: {}
        {{- end }}
        - name: webroot
          emptyDir: {}
    {{- if .Values.nodeSelector }}
      nodeSelector:
{{ toYaml .Values.nodeSelector | indent 8 }}
    {{- end }}
